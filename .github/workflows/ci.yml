name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      mxbai-embed-large-v1:
        image: "maragudk/mxbai-embed-large-v1-f16"
        ports:
          - "8082:8080"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Build
        run: go build -v -tags sqlite_fts5 ./...

      - name: Test
        run: go test -v -tags sqlite_fts5 -coverprofile=cover.out -shuffle on ./...

  evaluate:
    name: Evaluate
    runs-on: ubuntu-latest
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}

    services:
      llama3:
        image: "ghcr.io/maragudk/llama-server"
        ports:
          - "8081:8080"
        env:
          MODEL: "Llama-3.2-3B-Instruct-Q4_K_M.gguf"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Evaluate
        run: |
          go test -tags sqlite_fts5 -shuffle on -run TestEval ./...
          jq -s '{"Branch": "${{ github.ref_name }}", "Evals": .}' evals.jsonl > evals.json
          curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.EVALS_FUN_SECRET_KEY }}" -d @evals.json https://api.evals.fun/evals

      - name: Add evals comment to PR
        uses: actions/github-script@v7
        if: ${{ github.event_name == 'pull_request' }}
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `# Evals\n\n![Evals](https://api.evals.fun/evals.svg?key=${{ secrets.EVALS_FUN_PUBLIC_KEY }}&branch=${{ github.ref_name }}&cacheKey=${{ github.sha }})`
            })

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
